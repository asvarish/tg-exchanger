import { Injectable } from '@nestjs/common';
import { Cron, CronExpression } from '@nestjs/schedule';
import { InjectBot } from 'nestjs-telegraf';
import { Telegraf } from 'telegraf';
import { ExchangeRequestService } from './exchange-request.service';

@Injectable()
export class ExpirationService {
  constructor(
    @InjectBot() private readonly bot: Telegraf,
    private readonly exchangeRequestService: ExchangeRequestService,
  ) {}

  @Cron('*/30 * * * * *') // –ö–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
  async checkExpiredRequests() {
    try {
      const expiredRequests = await this.exchangeRequestService.getExpiredRequests();
      
      if (expiredRequests.length === 0) {
        return;
      }

      console.log(`–ù–∞–π–¥–µ–Ω–æ ${expiredRequests.length} –∏—Å—Ç–µ–∫—à–∏—Ö –∑–∞—è–≤–æ–∫`);

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
      for (const request of expiredRequests) {
        await this.notifyUserAboutExpiration(request);
      }

      // –ü–æ–º–µ—á–∞–µ–º –∑–∞—è–≤–∫–∏ –∫–∞–∫ –∏—Å—Ç–µ–∫—à–∏–µ
      const requestIds = expiredRequests.map(r => r.id);
      await this.exchangeRequestService.markAsExpired(requestIds);

      console.log(`–ü–æ–º–µ—á–µ–Ω–æ –∫–∞–∫ –∏—Å—Ç–µ–∫—à–∏–µ: –∑–∞—è–≤–∫–∏ #${requestIds.join(', #')}`);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∏—Å—Ç–µ–∫—à–∏—Ö –∑–∞—è–≤–æ–∫:', error);
    }
  }

  private async notifyUserAboutExpiration(request: any) {
    const operationType = request.operationType === 'buy' ? '–ø–æ–∫—É–ø–∫—É' : '–ø—Ä–æ–¥–∞–∂—É';
    
    const message = `‚è∞ –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∫—É—Ä—Å–∞ –ø–æ –∑–∞—è–≤–∫–µ #${request.id} –∏—Å—Ç–µ–∫!

üìã –ó–∞—è–≤–∫–∞: ${operationType} ${request.amount} ${request.currency}
üèôÔ∏è –ì–æ—Ä–æ–¥: ${request.city}
üí± –ö—É—Ä—Å: ${request.exchangeRate}
üìÖ –í—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è: ${new Date(request.expiresAt).toLocaleString('ru-RU')}

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –∫—É—Ä—Å–∞ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É –∫–æ–º–∞–Ω–¥–æ–π /start`;

    try {
      await this.bot.telegram.sendMessage(request.user.telegramId, message);
      console.log(`–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${request.user.telegramId} –ø–æ –∑–∞—è–≤–∫–µ #${request.id}`);
    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${request.user.telegramId}:`, error);
    }
  }
}
